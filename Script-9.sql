DECODE(컬럼명, 조건값1, 선택값1, 모든 조건값이 해당하지 않을때 값)

CASE 계산식 컬럼값
	WHEN 조건값 THEN 결과값
	ELSE 조건값이 없을때 결과값
END

SELECT MONTHS_BETWEEN(ADD_MONTHS(LAST_DAY(SYSDATE), 2), SYSDATE) FROM DUAL;

SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL;

SELECT TO_CHAR(TO_DATE('210505', 'YYMMDD'), 'YY"년" MM"월" DD"일"') FROM DUAL;

숫자형이나 날짜형 데이터를 문자열 데이터로 형변환 해주는 함수

SELECT EMP_NAME 이름, JOB_CODE 직급, EMP_NO, 
	DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남성', '2', '여성'), SALARY 급여,
	DECODE(JOB_CODE, 
		'J7', '20%',
		'J6', '15%',
		'J5', '10%',
		'5%'),
	DECODE(JOB_CODE, 
		'J7', SALARY * (1.2 + 12),
		'J6', SALARY * (1.15 + 12),
		'J5', SALARY * (1.1 + 12),
		SALARY * (1.05 + 12))
	FROM EMPLOYEE
WHERE JOB_CODE IN('J7', 'J6');

SELECT EMP_NAME,
	CASE
		WHEN JOB_CODE = 'J7' THEN SALARY * 1.2
		WHEN JOB_CODE = 'J6' THEN SALARY * 1.15
		WHEN JOB_CODE = 'J5' THEN SALARY * 1.1
		ELSE SALARY * 1.05
	END
FROM EMPLOYEE;

SELECT EMP_ID EMP_NAME, EMAIL, HIRE_DATE
FROM EMPLOYEE
WHERE HIRE_DATE BETWEEN '1990-01-01' AND '2000-01-01'
AND EMAIL LIKE '___#_%' ESCAPE '#';

-- 모든 권한을 보유한 DB 최고 관리자 계정(sys) 의 데이터 베이스 관리자 역할(sysdba)로
-- 접속하여 계정을 생성하여야 한다 (sys as sysdba)

SELECT UPPER() 

-- UPDATE 데이터베이스에 등록된 데이터를 수정하는 구문
-- INSERT 데이터를 추가하기위해 사용하는 구문


SELECT EMP_ID, EMP_NAME, EMAIL, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE EMAIL LIKE '____#_%' ESCAPE '#'
AND (DEPT_CODE = 'D9'
OR DEPT_CODE = 'D6')
AND SALARY >= 2700000
AND HIRE_DATE BETWEEN '1990-01-01' AND '2000-12-31';




SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 원래급여,
DECODE(JOB_CODE,
	'J7', '10%',
	'J6', '10%',
	'J5', '10%',
	'5%'
) 인상률,
DECODE(JOB_CODE,
	'J7', SALARY * 1.2,
	'J6', SALARY * 1.15,
	'J5', SALARY * 1.1,
	SALARY * 1.05
) 인상된급여
FROM EMPLOYEE;



SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 원래급여,
CASE
	WHEN JOB_CODE = 'J7' THEN '20%'
	WHEN JOB_CODE = 'J6' THEN '15%'
	WHEN JOB_CODE = 'J5' THEN '10%'
	ELSE'5%'
END
 인상률,
CASE
	WHEN JOB_CODE = 'J7' THEN SALARY * 1.2
	WHEN JOB_CODE = 'J6' THEN SALARY * 1.15
	WHEN JOB_CODE = 'J5' THEN SALARY * 1.1
	ELSE SALARY * 1.05
END
 인상된급여
FROM EMPLOYEE;


SELECT EMP_NAME 이름, EMP_ID 사번, EMP_NO 주민번호,
DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남성', 
	'여성') 성별
FROM EMPLOYEE;

SELECT EMP_NAME 이름, EMP_ID 사번, EMP_NO 주민번호,
CASE 
	WHEN SUBSTR(EMP_NO, 8, 1) = 1 THEN '남자'
	ELSE '여자'
END 성별
FROM EMPLOYEE;



SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 연봉,
DECODE(JOB_CODE,
	'J7', '40%',
	'J6', '30%',
	'J5', '20%',
	'10%') 인상률,
DECODE(JOB_CODE,
	'J7', SALARY * 1.4,
	'J6', SALARY * 1.3,
	'J5', SALARY * 1.2,
	SALARY * 1.1) "인상된 급여"
FROM EMPLOYEE;



SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 연봉,
CASE
	WHEN JOB_CODE = 'J7' THEN '40%'
	WHEN JOB_CODE = 'J6' THEN '30%'
	WHEN JOB_CODE = 'J5' THEN '20%'
	ELSE '10%'
END 인상률,
CASE
	WHEN JOB_CODE = 'J7' THEN SALARY * 1.4
	WHEN JOB_CODE = 'J6' THEN SALARY * 1.3
	WHEN JOB_CODE = 'J5' THEN SALARY * 1.2
	ELSE SALARY * 1.1
END "인상된 급여"
FROM EMPLOYEE;



SELECT TO_CHAR(SALARY, 'L9,999,999') 원화표시
FROM EMPLOYEE;



SELECT NVL(BONUS, 0)
FROM EMPLOYEE;


SELECT TO_CHAR(TO_DATE('510505', 'RRMMDD'), 'YYYY"-"MM"-"DD') FROM DUAL;



SELECT TO_CHAR(TO_DATE('230110', 'YYMMDD'), 
	'YYYY"년" MM"월" DD"일" "("DY")"') FROM DUAL;


SELECT TO_CHAR(TO_DATE('20230110'), 
	'YYYY"년" MM"월" DD"일" (DY)') FROM DUAL;


SELECT DECODE(SUBSTR(EMP_NO, 8, 1),
	'1', '남자',
	'여자'
) 성별 
FROM EMPLOYEE;


SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 원래급여, 
DECODE(JOB_CODE,
	'J7', '20%',
	'J6', '15%',
	'J5', '10%',
	'5%'
) 인상률, 
DECODE(JOB_CODE,
	'J7', SALARY * 1.2,
	'J6', SALARY * 1.15,
	'J5', SALARY * 1.1,
	SALARY * 1.05
) "인상된 급여 입니다"
FROM EMPLOYEE;


SELECT EMP_NAME 이름, JOB_CODE 직급코드, SALARY 원래급여, 
CASE
	WHEN JOB_CODE = 'J7' THEN '20%'
	WHEN JOB_CODE = 'J6' THEN '15%'
	WHEN JOB_CODE = 'J5' THEN '10%'
	ELSE '5%'
END 인상률,
CASE
	WHEN JOB_CODE = 'J7' THEN SALARY * 1.2
	WHEN JOB_CODE = 'J6' THEN SALARY * 1.15
	WHEN JOB_CODE = 'J5' THEN SALARY * 1.1
	ELSE SALARY * 1.05
END "인상된 급여"
FROM EMPLOYEE;

